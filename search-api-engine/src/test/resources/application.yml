jms:
  process:
    queue:
      start: moj.pam.process.start
      signal: moj.pam.process.signal
  ekp:
    queue:
      getmessageids:  moj.pam.camel.getnewmessageids
      startretrievemessage: moj.pam.camel.startretrievemessage
      startmessageids: moj.pam.camel.startmessageids
      confirmMessageId: moj.pam.camel.confirmMessageId
      fetchMessageId:  moj.pam.camel.fetchMessageId
      errorHospital: moj.pam.camel.errorHospital
      triggerPrepareMessage: moj.pam.camel.triggerPrepareMessage
      validateDataBySchema: moj.pam.camel.validateDataBySchema
      scanMessage: moj.pam.camel.scanMessage
      buildAdditionalAttachmentRelations: moj.pam.camel.buildAdditionalAttachmentRelations
      fillMetadata: moj.pam.camel.fillMetadata
      detectLegalApplications: moj.pam.camel.detectLegalApplications
      checkERV: moj.pam.camel.checkERV
      determineSenderRoles: moj.pam.camel.determineSenderRoles
      storeProcessingDataRepresentation: moj.pam.camel.storeProcessingDataRepresentation
      notifyMessageReceived: moj.pam.camel.notifyMessageReceived
      finishAblaufdatenSetVerarbeitet:  moj.pam.camel.finishAblaufdatenSetVerarbeitet
      findUpdate: moj.pam.camel.findUpdate

cxf:
  path: /rest
jbpm:
  executor:
    enabled: false
kieserver:
  casemgmt:
    enabled: true
  dmn:
    enabled: true
  drools:
    enabled: true
  swagger:
    enabled: true  
  jbpm:
    enabled: true
  jbpmui:
    enabled: true
  location: http://localhost:8090/rest/server
  serverId: search-api-test
  serverName: search-api-test
server:
  address: 0.0.0.0
  port: 8090
spring:
  h2:
    console:
      enabled: true
  datasource:
    driver-class-name: org.h2.jdbcx.JdbcDataSource
    password: sa
    url: jdbc:h2:mem:ekp-pam-db
    username: sa
  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        hbm2ddl:
          auto: update
        show_sql: false
  jta:
    narayana:
      transaction-manager-id: 1

# Define KJARs to deploy here
deployment:
  kjars:
    - alias: searc-api-container
      artifactId: search-workflows
      containerId: searc-api-container
      groupId: org.redhat.services
      version: 1.0.0-SNAPSHOT

logging:
  level:
    org:
      eclipse: WARN
      redhat: DEBUG
